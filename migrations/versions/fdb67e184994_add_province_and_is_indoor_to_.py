"""Add province and is_indoor to Destination

Revision ID: fdb67e184994
Revises: 4438c2490416
Create Date: 2025-07-01 10:01:43.244406

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fdb67e184994'
down_revision: str | Sequence[str] | None = '4438c2490416'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('destinations', sa.Column('province', sa.String(), nullable=False))
    op.add_column('destinations', sa.Column('is_indoor', sa.Boolean(), nullable=True))
    op.create_index(op.f('ix_destinations_name'), 'destinations', ['name'], unique=False)
    op.create_index(op.f('ix_destinations_province'), 'destinations', ['province'], unique=False)
    op.create_index(op.f('ix_destinations_region'), 'destinations', ['region'], unique=False)
    op.add_column('weather_data', sa.Column('grid_x', sa.Integer(), nullable=True))
    op.add_column('weather_data', sa.Column('grid_y', sa.Integer(), nullable=True))
    op.add_column('weather_data', sa.Column('forecast_time', sa.String(), nullable=True))
    op.add_column('weather_data', sa.Column('base_date', sa.Date(), nullable=True))
    op.add_column('weather_data', sa.Column('base_time', sa.String(), nullable=True))
    op.add_column('weather_data', sa.Column('temperature', sa.Float(), nullable=True))
    op.add_column('weather_data', sa.Column('precipitation_probability', sa.Float(), nullable=True))
    op.add_column('weather_data', sa.Column('precipitation_type', sa.String(), nullable=True))
    op.add_column('weather_data', sa.Column('sky_condition', sa.String(), nullable=True))
    op.add_column('weather_data', sa.Column('region_name', sa.String(), nullable=True))
    op.add_column('weather_data', sa.Column('raw_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('weather_data', 'destination_id',
               existing_type=sa.UUID(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('weather_data', 'destination_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_column('weather_data', 'raw_data')
    op.drop_column('weather_data', 'region_name')
    op.drop_column('weather_data', 'sky_condition')
    op.drop_column('weather_data', 'precipitation_type')
    op.drop_column('weather_data', 'precipitation_probability')
    op.drop_column('weather_data', 'temperature')
    op.drop_column('weather_data', 'base_time')
    op.drop_column('weather_data', 'base_date')
    op.drop_column('weather_data', 'forecast_time')
    op.drop_column('weather_data', 'grid_y')
    op.drop_column('weather_data', 'grid_x')
    op.drop_index(op.f('ix_destinations_region'), table_name='destinations')
    op.drop_index(op.f('ix_destinations_province'), table_name='destinations')
    op.drop_index(op.f('ix_destinations_name'), table_name='destinations')
    op.drop_column('destinations', 'is_indoor')
    op.drop_column('destinations', 'province')
    # ### end Alembic commands ###
