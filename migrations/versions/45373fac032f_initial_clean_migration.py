"""Initial clean migration

Revision ID: 45373fac032f
Revises: 
Create Date: 2025-06-30 15:48:39.142701

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '45373fac032f'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accommodations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('price_range', sa.String(), nullable=True),
    sa.Column('amenities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accommodations_id'), 'accommodations', ['id'], unique=False)
    op.create_table('admins',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'LOCKED', name='adminstatus'), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('admin_id')
    )
    op.create_index(op.f('ix_admins_admin_id'), 'admins', ['admin_id'], unique=False)
    op.create_index(op.f('ix_admins_email'), 'admins', ['email'], unique=True)
    op.create_table('city_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city_name', sa.String(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('attractions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('weather_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('city_name')
    )
    op.create_index(op.f('ix_city_info_id'), 'city_info', ['id'], unique=False)
    op.create_table('destinations',
    sa.Column('destination_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('latitude', sa.DECIMAL(precision=10, scale=8), nullable=True),
    sa.Column('longitude', sa.DECIMAL(precision=11, scale=8), nullable=True),
    sa.Column('amenities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('recommendation_weight', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('destination_id')
    )
    op.create_index(op.f('ix_destinations_destination_id'), 'destinations', ['destination_id'], unique=False)
    op.create_table('email_verifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_verifications_email'), 'email_verifications', ['email'], unique=False)
    op.create_index(op.f('ix_email_verifications_id'), 'email_verifications', ['id'], unique=False)
    op.create_table('restaurants',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('price_range', sa.String(), nullable=True),
    sa.Column('opening_hours', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_restaurants_id'), 'restaurants', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_roles_role_id'), 'roles', ['role_id'], unique=False)
    op.create_table('system_logs',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('context', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_system_logs_log_id'), 'system_logs', ['log_id'], unique=False)
    op.create_table('transportation',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('route', sa.String(), nullable=True),
    sa.Column('schedule', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('fare', sa.String(), nullable=True),
    sa.Column('contact', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transportation_id'), 'transportation', ['id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('nickname', sa.String(), nullable=True),
    sa.Column('profile_image', sa.String(), nullable=True),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('account_type', sa.Enum('USER', 'ADMIN', name='accounttype'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('USER', 'ADMIN', 'MODERATOR', name='userrole'), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('admin_roles',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.admin_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.PrimaryKeyConstraint('admin_id', 'role_id')
    )
    op.create_table('favorite_places',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('place_name', sa.String(), nullable=False),
    sa.Column('place_type', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_favorite_places_id'), 'favorite_places', ['id'], unique=False)
    op.create_table('travel_plans',
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('budget', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('status', sa.Enum('PLANNING', 'CONFIRMED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='travelplanstatus'), nullable=True),
    sa.Column('itinerary', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('plan_id')
    )
    op.create_index(op.f('ix_travel_plans_plan_id'), 'travel_plans', ['plan_id'], unique=False)
    op.create_table('user_activity_logs',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('activity_type', sa.String(), nullable=False),
    sa.Column('resource_type', sa.String(), nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_user_activity_logs_log_id'), 'user_activity_logs', ['log_id'], unique=False)
    op.create_table('weather_data',
    sa.Column('weather_id', sa.UUID(), nullable=False),
    sa.Column('destination_id', sa.UUID(), nullable=False),
    sa.Column('forecast_date', sa.Date(), nullable=False),
    sa.Column('temperature_max', sa.Float(), nullable=True),
    sa.Column('temperature_min', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('weather_condition', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['destination_id'], ['destinations.destination_id'], ),
    sa.PrimaryKeyConstraint('weather_id')
    )
    op.create_index(op.f('ix_weather_data_weather_id'), 'weather_data', ['weather_id'], unique=False)
    op.create_table('reviews',
    sa.Column('review_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('destination_id', sa.UUID(), nullable=False),
    sa.Column('travel_plan_id', sa.UUID(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('photos', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['destination_id'], ['destinations.destination_id'], ),
    sa.ForeignKeyConstraint(['travel_plan_id'], ['travel_plans.plan_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('review_id')
    )
    op.create_index(op.f('ix_reviews_review_id'), 'reviews', ['review_id'], unique=False)
    op.drop_index(op.f('ix_air_quality_health_profiles_id'), table_name='air_quality_health_profiles')
    op.drop_index(op.f('ix_air_quality_health_profiles_user_id'), table_name='air_quality_health_profiles')
    op.drop_table('air_quality_health_profiles')
    op.drop_index(op.f('ix_air_quality_records_city'), table_name='air_quality_records')
    op.drop_index(op.f('ix_air_quality_records_id'), table_name='air_quality_records')
    op.drop_index(op.f('ix_air_quality_records_user_id'), table_name='air_quality_records')
    op.drop_table('air_quality_records')
    op.drop_index(op.f('ix_air_quality_alerts_city'), table_name='air_quality_alerts')
    op.drop_index(op.f('ix_air_quality_alerts_id'), table_name='air_quality_alerts')
    op.drop_index(op.f('ix_air_quality_alerts_user_id'), table_name='air_quality_alerts')
    op.drop_table('air_quality_alerts')
    op.drop_index(op.f('ix_transportations_city'), table_name='transportations')
    op.drop_index(op.f('ix_transportations_id'), table_name='transportations')
    op.drop_index(op.f('ix_transportations_name'), table_name='transportations')
    op.drop_index(op.f('ix_transportations_region'), table_name='transportations')
    op.drop_index(op.f('ix_transportations_type'), table_name='transportations')
    op.drop_table('transportations')
    op.drop_index(op.f('ix_air_quality_favorites_city'), table_name='air_quality_favorites')
    op.drop_index(op.f('ix_air_quality_favorites_id'), table_name='air_quality_favorites')
    op.drop_index(op.f('ix_air_quality_favorites_user_id'), table_name='air_quality_favorites')
    op.drop_table('air_quality_favorites')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('air_quality_favorites',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('added_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('air_quality_favorites_pkey'))
    )
    op.create_index(op.f('ix_air_quality_favorites_user_id'), 'air_quality_favorites', ['user_id'], unique=False)
    op.create_index(op.f('ix_air_quality_favorites_id'), 'air_quality_favorites', ['id'], unique=False)
    op.create_index(op.f('ix_air_quality_favorites_city'), 'air_quality_favorites', ['city'], unique=False)
    op.create_table('transportations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('route_info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('operating_hours', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('fare_info', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('contact', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('region', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('transportations_pkey'))
    )
    op.create_index(op.f('ix_transportations_type'), 'transportations', ['type'], unique=False)
    op.create_index(op.f('ix_transportations_region'), 'transportations', ['region'], unique=False)
    op.create_index(op.f('ix_transportations_name'), 'transportations', ['name'], unique=False)
    op.create_index(op.f('ix_transportations_id'), 'transportations', ['id'], unique=False)
    op.create_index(op.f('ix_transportations_city'), 'transportations', ['city'], unique=False)
    op.create_table('air_quality_alerts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('alert_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('threshold_grade', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('air_quality_alerts_pkey'))
    )
    op.create_index(op.f('ix_air_quality_alerts_user_id'), 'air_quality_alerts', ['user_id'], unique=False)
    op.create_index(op.f('ix_air_quality_alerts_id'), 'air_quality_alerts', ['id'], unique=False)
    op.create_index(op.f('ix_air_quality_alerts_city'), 'air_quality_alerts', ['city'], unique=False)
    op.create_table('air_quality_records',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('source', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('pm10_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pm25_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('o3_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('no2_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('co_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('so2_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('aqi_value', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('aqi_grade', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('station_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('air_quality_records_pkey'))
    )
    op.create_index(op.f('ix_air_quality_records_user_id'), 'air_quality_records', ['user_id'], unique=False)
    op.create_index(op.f('ix_air_quality_records_id'), 'air_quality_records', ['id'], unique=False)
    op.create_index(op.f('ix_air_quality_records_city'), 'air_quality_records', ['city'], unique=False)
    op.create_table('air_quality_health_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('has_respiratory_condition', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('has_heart_condition', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_pregnant', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('age_group', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('sensitivity_level', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('preferred_activities', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('air_quality_health_profiles_pkey'))
    )
    op.create_index(op.f('ix_air_quality_health_profiles_user_id'), 'air_quality_health_profiles', ['user_id'], unique=True)
    op.create_index(op.f('ix_air_quality_health_profiles_id'), 'air_quality_health_profiles', ['id'], unique=False)
    op.drop_index(op.f('ix_reviews_review_id'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_weather_data_weather_id'), table_name='weather_data')
    op.drop_table('weather_data')
    op.drop_index(op.f('ix_user_activity_logs_log_id'), table_name='user_activity_logs')
    op.drop_table('user_activity_logs')
    op.drop_index(op.f('ix_travel_plans_plan_id'), table_name='travel_plans')
    op.drop_table('travel_plans')
    op.drop_index(op.f('ix_favorite_places_id'), table_name='favorite_places')
    op.drop_table('favorite_places')
    op.drop_table('admin_roles')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_transportation_id'), table_name='transportation')
    op.drop_table('transportation')
    op.drop_index(op.f('ix_system_logs_log_id'), table_name='system_logs')
    op.drop_table('system_logs')
    op.drop_index(op.f('ix_roles_role_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_restaurants_id'), table_name='restaurants')
    op.drop_table('restaurants')
    op.drop_index(op.f('ix_email_verifications_id'), table_name='email_verifications')
    op.drop_index(op.f('ix_email_verifications_email'), table_name='email_verifications')
    op.drop_table('email_verifications')
    op.drop_index(op.f('ix_destinations_destination_id'), table_name='destinations')
    op.drop_table('destinations')
    op.drop_index(op.f('ix_city_info_id'), table_name='city_info')
    op.drop_table('city_info')
    op.drop_index(op.f('ix_admins_email'), table_name='admins')
    op.drop_index(op.f('ix_admins_admin_id'), table_name='admins')
    op.drop_table('admins')
    op.drop_index(op.f('ix_accommodations_id'), table_name='accommodations')
    op.drop_table('accommodations')
    # ### end Alembic commands ###
